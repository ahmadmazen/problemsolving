package problems.easy;

import java.util.HashMap;
import java.util.Map;
/*
 * https://leetcode.com/problems/first-bad-version
 * problem definition :
 * 
 */
public class FirstBadVersion {
	Map<Integer, Boolean> badVersionMap = new HashMap<>();
	/*
	 * will use abit different implementation of regular binary search
	 * to reduce the number of calls to isBadVersion
	 * that by left < right to save some iteration and induce the result 
	 */
	public int firstBadVersion(int n) {
		
	}
	
	/*
     * helper method to set the bad versions we want to test with
     */
	
	private void fillBadVersionMap(int n, int startBadVersion) {
		for(int i = 1; i <= n; i++) {
			this.badVersionMap.put(i, i >= startBadVersion ? true : false);	
		}		
	}
	
	private boolean isBadVersion(int n) {
		return badVersionMap.get(n);
	}
}
